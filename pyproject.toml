[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ragged"
version = "0.1.0"
description = "A local RAG (Retrieval-Augmented Generation) application using open-source models"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["rag", "llm", "embeddings", "ai", "nlp"]
authors = [
    { name = "Ahsan Mahmood", email = "ahsanmahfn@gmail.com" }
]

dependencies = [
    "gradio>=4.0.0",
    "python-dotenv>=1.0.0",
    "sentence-transformers>=2.2.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "llama-cpp-python>=0.2.0",
    "scikit-learn>=1.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = ["E501"]  # Line length is handled by black

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]